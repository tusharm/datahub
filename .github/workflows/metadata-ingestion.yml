name: metadata ingestion
on:
  push:
    branches:
      - add-s3-sink-connector-ci
    paths:
      - ".github/workflows/metadata-ingestion.yml"
      - "metadata-ingestion/**"
      - "metadata-models/**"
  # pull_request:
  #   branches:
  #     - master
  #   paths:
  #     - ".github/**"
  #     - "metadata-ingestion/**"
  #     - "metadata-models/**"
  # release:
  #   types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  metadata-ingestion:
    runs-on: ubuntu-latest
    env:
      SPARK_VERSION: 3.0.3
      DATAHUB_TELEMETRY_ENABLED: false
      # TODO: Enable this once the test is fixed.
      # DATAHUB_LOOKML_GIT_TEST_SSH_KEY: ${{ secrets.DATAHUB_LOOKML_GIT_TEST_SSH_KEY }}
    # strategy:
    #   matrix:
    #     python-version: ["3.7", "3.10"]
    #     command:
    #       [
    #         "lint",
    #         "testQuick",
    #         "testIntegration",
    #         "testIntegrationBatch1",
    #         "testSlowIntegration",
    #       ]
    #     include:
    #       - python-version: "3.7"
    #         extraPythonRequirement: "sqlalchemy==1.3.24 apache-airflow~=2.2.0"
    #       - python-version: "3.10"
    #         extraPythonRequirement: "sqlalchemy~=1.4.0 apache-airflow>=2.4.0"
    #   fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.10.12
          cache: "pip"
      - name: Install dependencies
        run: ./metadata-ingestion/scripts/install_deps.sh
      - name: Install package
        run: ./gradlew :metadata-ingestion:installPackageOnly
      - name: Run metadata-ingestion Kafka Connect tests 
        run: ./gradlew :metadata-ingestion:testSingle -PtestFile=tests/integration/kafka-connect/test_kafka_connect.py
      - name: pip freeze show list installed
        if: false
        run: source metadata-ingestion/venv/bin/activate && pip freeze
      - uses: actions/upload-artifact@v3
        if: false
        with:
          name: Test Results (metadata ingestion ${{ matrix.python-version }})
          path: |
            **/build/reports/tests/test/**
            **/build/test-results/test/**
            **/junit.*.xml
      - name: Upload coverage to Codecov
        if: false
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: .
          fail_ci_if_error: false
          flags: pytest-${{ matrix.command }}
          name: pytest-${{ matrix.command }}
          verbose: true


  event-file:
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: Event File
          path: ${{ github.event_path }}
